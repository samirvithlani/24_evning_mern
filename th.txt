js :
json
arrow function
string
array methods
promise
async await


MERN STACk
m : mongo
E express
r react js
N node js

react:
framework:all common logic is developed by fw, developer has to 
	  focus only on busi logic...


form -> validation --->handler --> js -->
fw : 70%

frontend framework:
backend framework: server side :


SPA: single page application

react js: 
install  :node js
NPM: node package manager

C:\Program Files\nodejs\node_modules\npm\node_modules

method -->class -->package -> jar --->jdk -->java
functions ->build | dist [class] --> node_modules =--> npm -->node

NPX :

D:
 projects
    batchname
       ctrl+l --> cmd
        in cmd : npx create-react-app learning24evn
          cd learning24evn
		code .	


at a time we can return only 1 tag


npm install npm -g

componet based arch :
prod
cart
login
signup
header
footer

custom componet :

we can create 2 types of componet:
class based componet : 16.8
functional componet : 16.8
function
() => {}


index.html

index.js --> app.js ->component

library: : pre defined arch, we can create our own arch
framework: pre defined arch, we have to follow that arch


//react component starts with cap

we can provide css in 3 ways..

communcation bw component:
props : parent to child

props : properties
props is a object
props is immutable read only
props is used to pass data from parent to child

props drilling...


in props immidiate child component can access data from parent component




context api : parent to child
redux : parent to child, child to parent, parent to parent, child to child


virtual dom:

DOM: document object model

react change : ---> virtual dom :


virtual dom :
is light weight copy of dom

original dom compare : virtual dom

[100 el] -> [vc] [2] --> [2]


hooks: built in life cycle methods
useState..


react routing....

react-router-dom v6.x
<BrowserRouter> : enable routing in your react app
<Routes> : define routes in your app
<Route> : define a route

//create 1 component namedProductList : regsiter in routing...

//declare 1 array of product as useSatte in it. id,name,price,qty,color
//display product data in table format [use bootstrap table ]
//add 1 button in each row of table named delete..

API : app prog interface
-------------------------

use:
mvc : java : jsp servlet :
mvvm: m to v v model : API : angular:

n tire application :
API 


android phn google form:

submit --> [API] google server -->


google form : go lang:

API expose : url :--> 

andorind : java | ko...


uber,zom : map : google map:

google api : -> lat long:

react : api[node,java,php,....]


FORM : method : post get
GET : db data fetch
POST: create
PUT : UPDATE
DELETE:
PATCH: part update:

get : 

form:

post


axios:
